diff -up mesa-23.1.0-rc1/src/gallium/drivers/panfrost/pan_job.c.omv~ mesa-23.1.0-rc1/src/gallium/drivers/panfrost/pan_job.c
--- mesa-23.1.0-rc1/src/gallium/drivers/panfrost/pan_job.c.omv~	2023-04-19 05:38:47.151540226 +0100
+++ mesa-23.1.0-rc1/src/gallium/drivers/panfrost/pan_job.c	2023-04-19 05:38:51.171538762 +0100
@@ -965,7 +965,7 @@ panfrost_batch_submit_cs_ioctl(struct pa
       drmSyncobjWait(dev->fd, &out_sync, 1, INT64_MAX, 0, NULL);
 
       if ((dev->debug & PAN_DBG_TRACE) && dev->arch >= 10) {
-         uint32_t regs[256] = {};
+         uint32_t regs[256] = {0};
          pandecode_cs(qsubmits[0].stream_addr, qsubmits[0].stream_size,
                       dev->gpu_id, regs);
       }
diff -up mesa-23.1.0-rc1/src/panfrost/vulkan/panvk_vX_cmd_buffer.c.omv~ mesa-23.1.0-rc1/src/panfrost/vulkan/panvk_vX_cmd_buffer.c
--- mesa-23.1.0-rc1/src/panfrost/vulkan/panvk_vX_cmd_buffer.c.omv~	2023-04-19 05:29:23.491873060 +0100
+++ mesa-23.1.0-rc1/src/panfrost/vulkan/panvk_vX_cmd_buffer.c	2023-04-19 05:34:43.361668672 +0100
@@ -431,7 +431,7 @@ panvk_per_arch(cmd_get_tiler_context)(st
    panvk_per_arch(emit_tiler_context)(cmdbuf->device, width, height, &desc);
    memcpy(batch->tiler.descs.cpu, batch->tiler.templ,
           pan_size(TILER_CONTEXT) + pan_size(TILER_HEAP));
-   batch->tiler.ctx.bifrost = batch->tiler.descs.gpu;
+   batch->tiler.ctx.bifrost.ctx = batch->tiler.descs.gpu;
 }
 
 void
diff -up mesa-23.1.0-rc1/src/panfrost/vulkan/panvk_vX_cs.c.omv~ mesa-23.1.0-rc1/src/panfrost/vulkan/panvk_vX_cs.c
--- mesa-23.1.0-rc1/src/panfrost/vulkan/panvk_vX_cs.c.omv~	2023-04-19 05:25:18.911780784 +0100
+++ mesa-23.1.0-rc1/src/panfrost/vulkan/panvk_vX_cs.c	2023-04-19 05:36:36.021598736 +0100
@@ -540,7 +540,7 @@ panvk_per_arch(emit_tiler_job)(const str
    panvk_emit_tiler_dcd(pipeline, draw, section);
 
    pan_section_pack(job, TILER_JOB, TILER, cfg) {
-      cfg.address = draw->tiler_ctx->bifrost;
+      cfg.address = draw->tiler_ctx->bifrost.ctx;
    }
    pan_section_pack(job, TILER_JOB, PADDING, padding)
       ;
