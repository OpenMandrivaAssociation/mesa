From 4eab9a21fdbc86a0871422c76cfb7f7fc0928625 Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Fri, 23 Jun 2023 10:54:59 +0000
Subject: [PATCH] panvk: move bifrost specific sources to bifrost subdir

---
 src/panfrost/vulkan/{ => bifrost}/panvk_cs.c  |  0
 .../{ => bifrost}/panvk_descriptor_set.c      | 48 ++++++++++---------
 .../{ => bifrost}/panvk_vX_cmd_buffer.c       |  0
 .../{ => bifrost}/panvk_vX_cmd_buffer.h       |  0
 .../vulkan/{ => bifrost}/panvk_vX_cs.c        |  0
 .../vulkan/{ => bifrost}/panvk_vX_cs.h        |  0
 .../{ => bifrost}/panvk_vX_descriptor_set.c   |  0
 .../vulkan/{ => bifrost}/panvk_vX_device.c    |  0
 .../vulkan/{ => bifrost}/panvk_vX_device.h    |  0
 .../vulkan/{ => bifrost}/panvk_vX_image.c     |  0
 .../vulkan/{ => bifrost}/panvk_vX_meta.c      |  0
 .../vulkan/{ => bifrost}/panvk_vX_meta.h      |  0
 .../vulkan/{ => bifrost}/panvk_vX_meta_blit.c |  0
 .../{ => bifrost}/panvk_vX_meta_clear.c       |  0
 .../vulkan/{ => bifrost}/panvk_vX_meta_copy.c |  0
 .../panvk_vX_nir_lower_descriptors.c          |  0
 .../vulkan/{ => bifrost}/panvk_vX_pipeline.c  |  0
 .../vulkan/{ => bifrost}/panvk_vX_shader.c    |  0
 src/panfrost/vulkan/meson.build               | 29 +++++------
 src/panfrost/vulkan/panvk_device.c            |  6 ++-
 src/panfrost/vulkan/panvk_private.h           | 24 +++++-----
 21 files changed, 57 insertions(+), 50 deletions(-)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_cs.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_descriptor_set.c (86%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_cmd_buffer.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_cmd_buffer.h (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_cs.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_cs.h (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_descriptor_set.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_device.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_device.h (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_image.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_meta.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_meta.h (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_meta_blit.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_meta_clear.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_meta_copy.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_nir_lower_descriptors.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_pipeline.c (100%)
 rename src/panfrost/vulkan/{ => bifrost}/panvk_vX_shader.c (100%)

diff --git a/src/panfrost/vulkan/panvk_cs.c b/src/panfrost/vulkan/bifrost/panvk_cs.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_cs.c
rename to src/panfrost/vulkan/bifrost/panvk_cs.c
diff --git a/src/panfrost/vulkan/panvk_descriptor_set.c b/src/panfrost/vulkan/bifrost/panvk_descriptor_set.c
similarity index 86%
rename from src/panfrost/vulkan/panvk_descriptor_set.c
rename to src/panfrost/vulkan/bifrost/panvk_descriptor_set.c
index 89af66c7d00..bf534439198 100644
--- a/src/panfrost/vulkan/panvk_descriptor_set.c
+++ b/src/panfrost/vulkan/bifrost/panvk_descriptor_set.c
@@ -45,7 +45,7 @@
 #define PANVK_MAX_UBOS     255
 
 void
-panvk_GetDescriptorSetLayoutSupport(
+panvk_bifrost_GetDescriptorSetLayoutSupport(
    VkDevice _device, const VkDescriptorSetLayoutCreateInfo *pCreateInfo,
    VkDescriptorSetLayoutSupport *pSupport)
 {
@@ -119,10 +119,10 @@ panvk_GetDescriptorSetLayoutSupport(
  */
 
 VkResult
-panvk_CreatePipelineLayout(VkDevice _device,
-                           const VkPipelineLayoutCreateInfo *pCreateInfo,
-                           const VkAllocationCallbacks *pAllocator,
-                           VkPipelineLayout *pPipelineLayout)
+panvk_bifrost_CreatePipelineLayout(VkDevice _device,
+                                   const VkPipelineLayoutCreateInfo *pCreateInfo,
+                                   const VkAllocationCallbacks *pAllocator,
+                                   VkPipelineLayout *pPipelineLayout)
 {
    VK_FROM_HANDLE(panvk_device, device, _device);
    struct panvk_pipeline_layout *layout;
@@ -206,10 +206,10 @@ panvk_CreatePipelineLayout(VkDevice _device,
 }
 
 VkResult
-panvk_CreateDescriptorPool(VkDevice _device,
-                           const VkDescriptorPoolCreateInfo *pCreateInfo,
-                           const VkAllocationCallbacks *pAllocator,
-                           VkDescriptorPool *pDescriptorPool)
+panvk_bifrost_CreateDescriptorPool(VkDevice _device,
+                                  const VkDescriptorPoolCreateInfo *pCreateInfo,
+                                  const VkAllocationCallbacks *pAllocator,
+                                  VkDescriptorPool *pDescriptorPool)
 {
    VK_FROM_HANDLE(panvk_device, device, _device);
    struct panvk_descriptor_pool *pool;
@@ -269,8 +269,8 @@ panvk_CreateDescriptorPool(VkDevice _device,
 }
 
 void
-panvk_DestroyDescriptorPool(VkDevice _device, VkDescriptorPool _pool,
-                            const VkAllocationCallbacks *pAllocator)
+panvk_bifrost_DestroyDescriptorPool(VkDevice _device, VkDescriptorPool _pool,
+                                    const VkAllocationCallbacks *pAllocator)
 {
    VK_FROM_HANDLE(panvk_device, device, _device);
    VK_FROM_HANDLE(panvk_descriptor_pool, pool, _pool);
@@ -280,8 +280,8 @@ panvk_DestroyDescriptorPool(VkDevice _device, VkDescriptorPool _pool,
 }
 
 VkResult
-panvk_ResetDescriptorPool(VkDevice _device, VkDescriptorPool _pool,
-                          VkDescriptorPoolResetFlags flags)
+panvk_bifrost_ResetDescriptorPool(VkDevice _device, VkDescriptorPool _pool,
+                                  VkDescriptorPoolResetFlags flags)
 {
    VK_FROM_HANDLE(panvk_descriptor_pool, pool, _pool);
    memset(&pool->cur, 0, sizeof(pool->cur));
@@ -289,9 +289,9 @@ panvk_ResetDescriptorPool(VkDevice _device, VkDescriptorPool _pool,
 }
 
 static void
-panvk_descriptor_set_destroy(struct panvk_device *device,
-                             struct panvk_descriptor_pool *pool,
-                             struct panvk_descriptor_set *set)
+panvk_bifrost_descriptor_set_destroy(struct panvk_device *device,
+                                     struct panvk_descriptor_pool *pool,
+                                     struct panvk_descriptor_set *set)
 {
    vk_free(&device->vk.alloc, set->textures);
    vk_free(&device->vk.alloc, set->samplers);
@@ -306,8 +306,10 @@ panvk_descriptor_set_destroy(struct panvk_device *device,
 }
 
 VkResult
-panvk_FreeDescriptorSets(VkDevice _device, VkDescriptorPool descriptorPool,
-                         uint32_t count, const VkDescriptorSet *pDescriptorSets)
+panvk_bifrost_FreeDescriptorSets(VkDevice _device,
+                                 VkDescriptorPool descriptorPool,
+                                 uint32_t count,
+                                 const VkDescriptorSet *pDescriptorSets)
 {
    VK_FROM_HANDLE(panvk_device, device, _device);
    VK_FROM_HANDLE(panvk_descriptor_pool, pool, descriptorPool);
@@ -316,13 +318,13 @@ panvk_FreeDescriptorSets(VkDevice _device, VkDescriptorPool descriptorPool,
       VK_FROM_HANDLE(panvk_descriptor_set, set, pDescriptorSets[i]);
 
       if (set)
-         panvk_descriptor_set_destroy(device, pool, set);
+         panvk_bifrost_descriptor_set_destroy(device, pool, set);
    }
    return VK_SUCCESS;
 }
 
 VkResult
-panvk_CreateSamplerYcbcrConversion(
+panvk_bifrost_CreateSamplerYcbcrConversion(
    VkDevice device, const VkSamplerYcbcrConversionCreateInfo *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkSamplerYcbcrConversion *pYcbcrConversion)
@@ -332,9 +334,9 @@ panvk_CreateSamplerYcbcrConversion(
 }
 
 void
-panvk_DestroySamplerYcbcrConversion(VkDevice device,
-                                    VkSamplerYcbcrConversion ycbcrConversion,
-                                    const VkAllocationCallbacks *pAllocator)
+panvk_bifrost_DestroySamplerYcbcrConversion(VkDevice device,
+                                            VkSamplerYcbcrConversion ycbcrConversion,
+                                            const VkAllocationCallbacks *pAllocator)
 {
    panvk_stub();
 }
diff --git a/src/panfrost/vulkan/panvk_vX_cmd_buffer.c b/src/panfrost/vulkan/bifrost/panvk_vX_cmd_buffer.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_cmd_buffer.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_cmd_buffer.c
diff --git a/src/panfrost/vulkan/panvk_vX_cmd_buffer.h b/src/panfrost/vulkan/bifrost/panvk_vX_cmd_buffer.h
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_cmd_buffer.h
rename to src/panfrost/vulkan/bifrost/panvk_vX_cmd_buffer.h
diff --git a/src/panfrost/vulkan/panvk_vX_cs.c b/src/panfrost/vulkan/bifrost/panvk_vX_cs.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_cs.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_cs.c
diff --git a/src/panfrost/vulkan/panvk_vX_cs.h b/src/panfrost/vulkan/bifrost/panvk_vX_cs.h
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_cs.h
rename to src/panfrost/vulkan/bifrost/panvk_vX_cs.h
diff --git a/src/panfrost/vulkan/panvk_vX_descriptor_set.c b/src/panfrost/vulkan/bifrost/panvk_vX_descriptor_set.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_descriptor_set.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_descriptor_set.c
diff --git a/src/panfrost/vulkan/panvk_vX_device.c b/src/panfrost/vulkan/bifrost/panvk_vX_device.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_device.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_device.c
diff --git a/src/panfrost/vulkan/panvk_vX_device.h b/src/panfrost/vulkan/bifrost/panvk_vX_device.h
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_device.h
rename to src/panfrost/vulkan/bifrost/panvk_vX_device.h
diff --git a/src/panfrost/vulkan/panvk_vX_image.c b/src/panfrost/vulkan/bifrost/panvk_vX_image.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_image.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_image.c
diff --git a/src/panfrost/vulkan/panvk_vX_meta.c b/src/panfrost/vulkan/bifrost/panvk_vX_meta.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_meta.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_meta.c
diff --git a/src/panfrost/vulkan/panvk_vX_meta.h b/src/panfrost/vulkan/bifrost/panvk_vX_meta.h
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_meta.h
rename to src/panfrost/vulkan/bifrost/panvk_vX_meta.h
diff --git a/src/panfrost/vulkan/panvk_vX_meta_blit.c b/src/panfrost/vulkan/bifrost/panvk_vX_meta_blit.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_meta_blit.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_meta_blit.c
diff --git a/src/panfrost/vulkan/panvk_vX_meta_clear.c b/src/panfrost/vulkan/bifrost/panvk_vX_meta_clear.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_meta_clear.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_meta_clear.c
diff --git a/src/panfrost/vulkan/panvk_vX_meta_copy.c b/src/panfrost/vulkan/bifrost/panvk_vX_meta_copy.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_meta_copy.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_meta_copy.c
diff --git a/src/panfrost/vulkan/panvk_vX_nir_lower_descriptors.c b/src/panfrost/vulkan/bifrost/panvk_vX_nir_lower_descriptors.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_nir_lower_descriptors.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_nir_lower_descriptors.c
diff --git a/src/panfrost/vulkan/panvk_vX_pipeline.c b/src/panfrost/vulkan/bifrost/panvk_vX_pipeline.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_pipeline.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_pipeline.c
diff --git a/src/panfrost/vulkan/panvk_vX_shader.c b/src/panfrost/vulkan/bifrost/panvk_vX_shader.c
similarity index 100%
rename from src/panfrost/vulkan/panvk_vX_shader.c
rename to src/panfrost/vulkan/bifrost/panvk_vX_shader.c
diff --git a/src/panfrost/vulkan/meson.build b/src/panfrost/vulkan/meson.build
index 8d7cc5e2b11..8ea939ff59e 100644
--- a/src/panfrost/vulkan/meson.build
+++ b/src/panfrost/vulkan/meson.build
@@ -28,16 +28,17 @@ panvk_entrypoints = custom_target(
   command : [
     prog_python, '@INPUT0@', '--xml', '@INPUT1@', '--proto', '--weak',
     '--out-h', '@OUTPUT0@', '--out-c', '@OUTPUT1@', '--prefix', 'panvk',
+    '--device-prefix', 'panvk_bifrost',
     '--device-prefix', 'panvk_v6', '--device-prefix', 'panvk_v7',
   ],
   depend_files : vk_entrypoints_gen_depend_files,
 )
 
 libpanvk_files = files(
+  'bifrost/panvk_cs.c',
+  'bifrost/panvk_descriptor_set.c',
   'panvk_cmd_buffer.c',
-  'panvk_cs.c',
   'panvk_device.c',
-  'panvk_descriptor_set.c',
   'panvk_formats.c',
   'panvk_image.c',
   'panvk_mempool.c',
@@ -60,18 +61,18 @@ foreach arch : ['6', '7']
     'panvk_v@0@'.format(arch),
     [
       panvk_entrypoints[0],
-      'panvk_vX_cmd_buffer.c',
-      'panvk_vX_cs.c',
-      'panvk_vX_descriptor_set.c',
-      'panvk_vX_device.c',
-      'panvk_vX_image.c',
-      'panvk_vX_meta.c',
-      'panvk_vX_meta_blit.c',
-      'panvk_vX_meta_copy.c',
-      'panvk_vX_meta_clear.c',
-      'panvk_vX_nir_lower_descriptors.c',
-      'panvk_vX_pipeline.c',
-      'panvk_vX_shader.c',
+      'bifrost/panvk_vX_cmd_buffer.c',
+      'bifrost/panvk_vX_cs.c',
+      'bifrost/panvk_vX_descriptor_set.c',
+      'bifrost/panvk_vX_device.c',
+      'bifrost/panvk_vX_image.c',
+      'bifrost/panvk_vX_meta.c',
+      'bifrost/panvk_vX_meta_blit.c',
+      'bifrost/panvk_vX_meta_copy.c',
+      'bifrost/panvk_vX_meta_clear.c',
+      'bifrost/panvk_vX_nir_lower_descriptors.c',
+      'bifrost/panvk_vX_pipeline.c',
+      'bifrost/panvk_vX_shader.c',
     ],
     include_directories : [
       inc_include,
diff --git a/src/panfrost/vulkan/panvk_device.c b/src/panfrost/vulkan/panvk_device.c
index e31d5e1bfe6..4adb32fb215 100644
--- a/src/panfrost/vulkan/panvk_device.c
+++ b/src/panfrost/vulkan/panvk_device.c
@@ -842,16 +842,18 @@ panvk_CreateDevice(VkPhysicalDevice physicalDevice,
    if (!device)
       return vk_error(physical_device, VK_ERROR_OUT_OF_HOST_MEMORY);
 
-   const struct vk_device_entrypoint_table *dev_entrypoints;
+   const struct vk_device_entrypoint_table *base_dev_entrypoints, *dev_entrypoints;
    const struct vk_command_buffer_ops *cmd_buffer_ops;
    struct vk_device_dispatch_table dispatch_table;
 
    switch (physical_device->pdev.arch) {
    case 6:
+      base_dev_entrypoints = &panvk_bifrost_device_entrypoints;
       dev_entrypoints = &panvk_v6_device_entrypoints;
       cmd_buffer_ops = &panvk_v6_cmd_buffer_ops;
       break;
    case 7:
+      base_dev_entrypoints = &panvk_bifrost_device_entrypoints;
       dev_entrypoints = &panvk_v7_device_entrypoints;
       cmd_buffer_ops = &panvk_v7_cmd_buffer_ops;
       break;
@@ -868,6 +870,8 @@ panvk_CreateDevice(VkPhysicalDevice physicalDevice,
 
    vk_device_dispatch_table_from_entrypoints(&dispatch_table, dev_entrypoints,
                                              false);
+   vk_device_dispatch_table_from_entrypoints(&dispatch_table, base_dev_entrypoints,
+                                             false);
    vk_device_dispatch_table_from_entrypoints(&dispatch_table,
                                              &panvk_device_entrypoints, false);
    vk_device_dispatch_table_from_entrypoints(&dispatch_table,
diff --git a/src/panfrost/vulkan/panvk_private.h b/src/panfrost/vulkan/panvk_private.h
index aca7bb48e36..298da632804 100644
--- a/src/panfrost/vulkan/panvk_private.h
+++ b/src/panfrost/vulkan/panvk_private.h
@@ -1076,25 +1076,25 @@ VK_DEFINE_NONDISP_HANDLE_CASTS(panvk_sampler, base, VkSampler,
 #elif PAN_ARCH == 7
 #define panvk_per_arch(name) panvk_arch_name(name, v7)
 #endif
-#include "panvk_vX_cmd_buffer.h"
-#include "panvk_vX_cs.h"
-#include "panvk_vX_device.h"
-#include "panvk_vX_meta.h"
+#include "bifrost/panvk_vX_cmd_buffer.h"
+#include "bifrost/panvk_vX_cs.h"
+#include "bifrost/panvk_vX_device.h"
+#include "bifrost/panvk_vX_meta.h"
 #else
 #define PAN_ARCH             6
 #define panvk_per_arch(name) panvk_arch_name(name, v6)
-#include "panvk_vX_cmd_buffer.h"
-#include "panvk_vX_cs.h"
-#include "panvk_vX_device.h"
-#include "panvk_vX_meta.h"
+#include "bifrost/panvk_vX_cmd_buffer.h"
+#include "bifrost/panvk_vX_cs.h"
+#include "bifrost/panvk_vX_device.h"
+#include "bifrost/panvk_vX_meta.h"
 #undef PAN_ARCH
 #undef panvk_per_arch
 #define PAN_ARCH             7
 #define panvk_per_arch(name) panvk_arch_name(name, v7)
-#include "panvk_vX_cmd_buffer.h"
-#include "panvk_vX_cs.h"
-#include "panvk_vX_device.h"
-#include "panvk_vX_meta.h"
+#include "bifrost/panvk_vX_cmd_buffer.h"
+#include "bifrost/panvk_vX_cs.h"
+#include "bifrost/panvk_vX_device.h"
+#include "bifrost/panvk_vX_meta.h"
 #undef PAN_ARCH
 #undef panvk_per_arch
 #endif
-- 
GitLab

