From e1a1150142b669692e633bd0c8ce102b404eb4d0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Ol=C5=A1=C3=A1k?= <marek.olsak@amd.com>
Date: Tue, 17 Oct 2023 21:44:31 -0400
Subject: [PATCH 541/834] radeonsi/ci: enable GLES CTS in the runner

Reviewed-by: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
Part-of: <https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/25774>
---
 .../drivers/radeonsi/ci/radeonsi-run-tests.py | 57 ++++++++++++++++++-
 1 file changed, 56 insertions(+), 1 deletion(-)

diff --git a/src/gallium/drivers/radeonsi/ci/radeonsi-run-tests.py b/src/gallium/drivers/radeonsi/ci/radeonsi-run-tests.py
index 582cd947bcc..0ce00ae0b50 100755
--- a/src/gallium/drivers/radeonsi/ci/radeonsi-run-tests.py
+++ b/src/gallium/drivers/radeonsi/ci/radeonsi-run-tests.py
@@ -53,6 +53,7 @@ path_above_mesa = os.path.realpath(os.path.join(os.path.dirname(__file__), *['..
 
 parser.add_argument("--piglit-path", type=str, help="Path to piglit source folder.")
 parser.add_argument("--glcts-path", type=str, help="Path to GLCTS source folder.")
+parser.add_argument("--escts-path", type=str, help="Path to GLES CTS source folder.")
 parser.add_argument("--deqp-path", type=str, help="Path to dEQP source folder.")
 parser.add_argument(
     "--parent-path",
@@ -81,6 +82,9 @@ parser.add_argument(
 parser.add_argument(
     "--no-glcts", dest="glcts", help="Disable GLCTS tests", action="store_false"
 )
+parser.add_argument(
+    "--no-escts", dest="escts", help="Disable GLES CTS tests", action="store_false"
+)
 parser.add_argument(
     "--no-deqp", dest="deqp", help="Disable dEQP tests", action="store_false"
 )
@@ -113,6 +117,7 @@ parser.add_argument(
 )
 parser.set_defaults(piglit=True)
 parser.set_defaults(glcts=True)
+parser.set_defaults(escts=True)
 parser.set_defaults(deqp=True)
 parser.set_defaults(deqp_egl=True)
 parser.set_defaults(deqp_gles2=True)
@@ -156,6 +161,7 @@ parser.add_argument(
 args = parser.parse_args(sys.argv[1:])
 piglit_path = args.piglit_path
 glcts_path = args.glcts_path
+escts_path = args.escts_path
 deqp_path = args.deqp_path
 
 if args.parent_path:
@@ -164,9 +170,10 @@ if args.parent_path:
         sys.exit(0)
     piglit_path = os.path.join(args.parent_path, "piglit")
     glcts_path = os.path.join(args.parent_path, "glcts")
+    escts_path = os.path.join(args.parent_path, "escts")
     deqp_path = os.path.join(args.parent_path, "deqp")
 else:
-    if not args.piglit_path or not args.glcts_path or not args.deqp_path:
+    if not args.piglit_path or not args.glcts_path or not args.escts_path or not args.deqp_path:
         parser.print_help()
         sys.exit(0)
 
@@ -447,6 +454,54 @@ if args.glcts:
     if not verify_results(os.path.join(out, "failures.csv")):
         success = False
 
+# escts test
+if args.escts:
+    out = os.path.join(output_folder, "escts")
+    print_yellow("Running  ESCTS tests", args.verbose > 0)
+    os.mkdir(out)
+
+    cmd = [
+        "deqp-runner",
+        "run",
+        "--tests-per-group",
+        "100",
+        "--deqp",
+        "{}/build/external/openglcts/modules/glcts".format(escts_path),
+        "--caselist",
+        "{}/build/external/openglcts/modules/gl_cts/data/mustpass/gles/khronos_mustpass/3.2.6.x/gles2-khr-master.txt".format(
+            escts_path
+        ),
+        "--caselist",
+        "{}/build/external/openglcts/modules/gl_cts/data/mustpass/gles/khronos_mustpass/3.2.6.x/gles3-khr-master.txt".format(
+            escts_path
+        ),
+        "--caselist",
+        "{}/build/external/openglcts/modules/gl_cts/data/mustpass/gles/khronos_mustpass/3.2.6.x/gles31-khr-master.txt".format(
+            escts_path
+        ),
+        "--caselist",
+        "{}/build/external/openglcts/modules/gl_cts/data/mustpass/gles/khronos_mustpass/3.2.6.x/gles32-khr-master.txt".format(
+            escts_path
+        ),
+        "--output",
+        out,
+        "--skips",
+        skips,
+        "--jobs",
+        str(args.jobs),
+        "--timeout",
+        "1000"
+    ] + filters_args + flakes_args
+
+    if os.path.exists(baseline):
+        cmd += ["--baseline", baseline]
+    cmd += deqp_args
+
+    run_cmd(cmd, args.verbose)
+
+    if not verify_results(os.path.join(out, "failures.csv")):
+        success = False
+
 if args.deqp:
     print_yellow("Running   dEQP tests", args.verbose > 0)
 
-- 
2.42.0

