From 5939400ad65684b581843bb03d3a01532384a1e1 Mon Sep 17 00:00:00 2001
From: Boris Brezillon <boris.brezillon@collabora.com>
Date: Tue, 21 Nov 2023 09:59:46 +0100
Subject: [PATCH 13/29] panfrost: Restrict GPU VA space on panthor + 32bit
 builds

Panthor needs some part of the GPU VA space to be reserved for kernel
buffer objects (heap chunks, mostly). Since our VA space is limited to
32-bit when the kernel is 32-bit, and there's no way we can know if we
are interacting with a 32bit or 64bit kernel when our binary is 32bit,
let's just assume we only have 32bit of address space in that case, and
reserve the upper 1G for kernel use.

Signed-off-by: Boris Brezillon <boris.brezillon@collabora.com>
---
 src/panfrost/lib/pan_props.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/src/panfrost/lib/pan_props.c b/src/panfrost/lib/pan_props.c
index a3675feb095..aebe8b4614d 100644
--- a/src/panfrost/lib/pan_props.c
+++ b/src/panfrost/lib/pan_props.c
@@ -201,7 +201,22 @@ panfrost_query_gpu_va_range(const struct panfrost_device *dev,
    uint64_t va_bits = dev->kmod.props.mmu_features & 0xff;
 
    *va_start = PANFROST_VA_START;
-   *va_size = (1ull << va_bits) - PANFROST_VA_START;
+
+   if (dev->arch >= 10) {
+      assert(va_bits >= 32);
+
+      /* On panthor+32b, we keep part of the VA space to map kernel objects.
+       * We assume a 3G/1G user/kernel split for now. Otherwise, we assume
+       * we have enough VA space to split it in two and reserve half of it
+       * for kernel objects.
+       */
+      if (va_bits == 32)
+         *va_size = (3ull << 30) - PANFROST_VA_START;
+      else
+         *va_size = (1ull << (va_bits - 1)) - PANFROST_VA_START;
+   } else {
+      *va_size = (1ull << va_bits) - PANFROST_VA_START;
+   }
 }
 
 void
-- 
2.43.0

