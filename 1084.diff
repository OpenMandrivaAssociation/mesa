diff --git a/src/gallium/auxiliary/vl/vl_bicubic_filter.c b/src/gallium/auxiliary/vl/vl_bicubic_filter.c
index f3f8cbee778ebc166854d1d396b1bb5ec84149c6..077e2131bfd74f660097d9325cd7d35d8fe72f78 100644
--- a/src/gallium/auxiliary/vl/vl_bicubic_filter.c
+++ b/src/gallium/auxiliary/vl/vl_bicubic_filter.c
@@ -201,10 +201,11 @@ create_frag_shader(struct vl_bicubic_filter *filter, unsigned video_width,
 
    ureg_FLR(shader, ureg_writemask(t_array[22], TGSI_WRITEMASK_XY),
             ureg_src(t_array[22]));
-   ureg_DIV(shader, ureg_writemask(t_array[22], TGSI_WRITEMASK_XY),
-            ureg_src(t_array[22]), ureg_imm2f(shader, video_width, video_height));
-   ureg_ADD(shader, ureg_writemask(t_array[22], TGSI_WRITEMASK_XY),
-            ureg_src(t_array[22]), half_pixel);
+
+   ureg_MAD(shader, ureg_writemask(t_array[22], TGSI_WRITEMASK_XY),
+            ureg_src(t_array[22]),
+            ureg_imm2f(shader, 1.0f / video_width, 1.0f / video_height),
+            half_pixel);
 
    /*
     * t_array[0..*] = vtex + offset[0..*]
diff --git a/src/gallium/auxiliary/vl/vl_compositor.c b/src/gallium/auxiliary/vl/vl_compositor.c
index 12c58ff7436db2ac865b4847f553646e9a767dd8..b925980b7ce49a9029c46ae4067a38f5cb0833de 100644
--- a/src/gallium/auxiliary/vl/vl_compositor.c
+++ b/src/gallium/auxiliary/vl/vl_compositor.c
@@ -70,7 +70,7 @@ init_shaders(struct vl_compositor *c)
       return false;
    }
 
-   if (c->pipe_compute_supported) {
+   if (c->pipe_cs_composit_supported) {
       c->cs_video_buffer = vl_compositor_cs_create_shader(c, compute_shader_video_buffer);
       if (!c->cs_video_buffer) {
          debug_printf("Unable to create video_buffer compute shader.\n");
@@ -125,7 +125,7 @@ static void cleanup_shaders(struct vl_compositor *c)
    c->pipe->delete_fs_state(c->pipe, c->fs_rgb_yuv.y);
    c->pipe->delete_fs_state(c->pipe, c->fs_rgb_yuv.uv);
 
-   if (c->pipe_compute_supported) {
+   if (c->pipe_cs_composit_supported) {
       c->pipe->delete_compute_state(c->pipe, c->cs_video_buffer);
       c->pipe->delete_compute_state(c->pipe, c->cs_weave_rgb);
       c->pipe->delete_compute_state(c->pipe, c->cs_rgba);
@@ -561,7 +561,7 @@ vl_compositor_set_buffer_layer(struct vl_compositor_state *s,
       float half_a_line = 0.5f / s->layers[layer].zw.y;
       switch(deinterlace) {
       case VL_COMPOSITOR_WEAVE:
-         if (c->pipe_compute_supported)
+         if (c->pipe_cs_composit_supported)
             s->layers[layer].cs = c->cs_weave_rgb;
          else
             s->layers[layer].fs = c->fs_weave_rgb;
@@ -571,7 +571,7 @@ vl_compositor_set_buffer_layer(struct vl_compositor_state *s,
          s->layers[layer].zw.x = 0.0f;
          s->layers[layer].src.tl.y += half_a_line;
          s->layers[layer].src.br.y += half_a_line;
-         if (c->pipe_compute_supported)
+         if (c->pipe_cs_composit_supported)
             s->layers[layer].cs = c->cs_video_buffer;
          else
             s->layers[layer].fs = c->fs_video_buffer;
@@ -581,7 +581,7 @@ vl_compositor_set_buffer_layer(struct vl_compositor_state *s,
          s->layers[layer].zw.x = 1.0f;
          s->layers[layer].src.tl.y -= half_a_line;
          s->layers[layer].src.br.y -= half_a_line;
-         if (c->pipe_compute_supported)
+         if (c->pipe_cs_composit_supported)
             s->layers[layer].cs = c->cs_video_buffer;
          else
             s->layers[layer].fs = c->fs_video_buffer;
@@ -589,7 +589,7 @@ vl_compositor_set_buffer_layer(struct vl_compositor_state *s,
       }
 
    } else {
-      if (c->pipe_compute_supported)
+      if (c->pipe_cs_composit_supported)
          s->layers[layer].cs = c->cs_video_buffer;
       else
          s->layers[layer].fs = c->fs_video_buffer;
@@ -757,7 +757,9 @@ vl_compositor_init(struct vl_compositor *c, struct pipe_context *pipe)
 
    memset(c, 0, sizeof(*c));
 
-   c->pipe_compute_supported = pipe->screen->get_param(pipe->screen, PIPE_CAP_COMPUTE);
+   c->pipe_cs_composit_supported = pipe->screen->get_param(pipe->screen, PIPE_CAP_COMPUTE) &&
+            pipe->screen->get_param(pipe->screen, PIPE_CAP_TGSI_TEX_TXF_LZ);
+
    c->pipe = pipe;
 
    if (!init_pipe_state(c)) {
diff --git a/src/gallium/auxiliary/vl/vl_compositor.h b/src/gallium/auxiliary/vl/vl_compositor.h
index d42618824a7281b0e05cd82b10e50babd1985136..ae06c153d5b7229cada2a564e12c2f9e36f65f29 100644
--- a/src/gallium/auxiliary/vl/vl_compositor.h
+++ b/src/gallium/auxiliary/vl/vl_compositor.h
@@ -121,7 +121,7 @@ struct vl_compositor
    void *cs_weave_rgb;
    void *cs_rgba;
 
-   bool pipe_compute_supported;
+   bool pipe_cs_composit_supported;
 
    struct {
       struct {
